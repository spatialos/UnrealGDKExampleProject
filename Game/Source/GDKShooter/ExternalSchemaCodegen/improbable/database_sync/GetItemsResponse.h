// Generated by Unreal External Schema Codegen

#pragma once

#include "CoreMinimal.h"
#include "Utils/SchemaOption.h"
#include <WorkerSDK/improbable/c_schema.h>
#include <WorkerSDK/improbable/c_worker.h>

#include "../../ExternalSchemaHelperFunctions.h"

#include "../../improbable/database_sync/DatabaseSyncItem.h"

namespace improbable {
namespace database_sync {

// Generated from C:\DEV\UnrealGDKExampleProject\Game\Plugins\UnrealGDK\SpatialGDK\Build\Scripts\dbsync\database_sync.schema(112,1)
class GetItemsResponse : public improbable::SpatialType
{
public:
	// Creates a new instance with specified arguments for each field.
	GetItemsResponse(const TArray<::improbable::database_sync::DatabaseSyncItem>& Items);
	// Creates a new instance with default values for each field.
	GetItemsResponse();
	// Creates a new instance with default values for each field. This is
	// equivalent to a default-constructed instance.
	static GetItemsResponse Create() { return {}; }
	// Copyable and movable.
	GetItemsResponse(GetItemsResponse&&) = default;
	GetItemsResponse(const GetItemsResponse&) = default;
	GetItemsResponse& operator=(GetItemsResponse&&) = default;
	GetItemsResponse& operator=(const GetItemsResponse&) = default;
	~GetItemsResponse() = default;
	
	bool operator==(const GetItemsResponse&) const;
	bool operator!=(const GetItemsResponse&) const;
	
	// Serialize this object data into the C API argument
	void Serialize(Schema_Object* SchemaObject) const override;
	
	// Deserialize the C API object argument into an instance of this class and return it
	static GetItemsResponse Deserialize(Schema_Object* SchemaObject);
	
	// Field Items = 1
	const TArray<::improbable::database_sync::DatabaseSyncItem>& GetItems() const;
	TArray<::improbable::database_sync::DatabaseSyncItem>& GetItems();
	GetItemsResponse& SetItems(const TArray<::improbable::database_sync::DatabaseSyncItem>&);
	
private:
	TArray<::improbable::database_sync::DatabaseSyncItem> _Items;
};

inline uint32 GetTypeHash(const GetItemsResponse& Value);

} // namespace database_sync
} // namespace improbable

