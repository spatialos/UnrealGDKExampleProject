// Generated by Unreal External Schema Codegen

#pragma once

#include "CoreMinimal.h"
#include "Utils/SchemaOption.h"
#include <WorkerSDK/improbable/c_schema.h>
#include <WorkerSDK/improbable/c_worker.h>

#include "../../ExternalSchemaHelperFunctions.h"

namespace improbable {
namespace database_sync {

// Generated from C:\DEV\UnrealGDKExampleProject\Game\Plugins\UnrealGDK\SpatialGDK\Build\Scripts\dbsync\database_sync.schema(42,1)
class DatabaseSyncReference : public improbable::SpatialComponent
{
public:
	static const Worker_ComponentId ComponentId = 1906;
	// Creates a new instance with specified arguments for each field.
	DatabaseSyncReference(const FString& Path);
	// Creates a new instance with default values for each field.
	DatabaseSyncReference();
	// Creates a new instance with default values for each field. This is
	// equivalent to a default-constructed instance.
	static DatabaseSyncReference Create() { return {}; }
	// Copyable and movable.
	DatabaseSyncReference(DatabaseSyncReference&&) = default;
	DatabaseSyncReference(const DatabaseSyncReference&) = default;
	DatabaseSyncReference& operator=(DatabaseSyncReference&&) = default;
	DatabaseSyncReference& operator=(const DatabaseSyncReference&) = default;
	~DatabaseSyncReference() = default;
	
	bool operator==(const DatabaseSyncReference&) const;
	bool operator!=(const DatabaseSyncReference&) const;
	
	// Serialize this object data into the C API argument
	void Serialize(Schema_ComponentData* ComponentData) const override;
	
	// Deserialize the C API object argument into an instance of this class and return it
	static DatabaseSyncReference Deserialize(Schema_ComponentData* ComponentData);
	
	// Field Path = 1
	const FString& GetPath() const;
	FString& GetPath();
	DatabaseSyncReference& SetPath(const FString&);
	
private:
	FString _Path;

public:
	class Update : public improbable::SpatialComponentUpdate
	{
	public:
		// Creates a new instance with default values for each field.
		Update() = default;
		// Creates a new instance with default values for each field. This is
		// equivalent to a default-constructed instance.
		static Update Create() { return {}; }
		// Copyable and movable.
		Update(Update&&) = default;
		Update(const Update&) = default;
		Update& operator=(Update&&) = default;
		Update& operator=(const Update&) = default;
		~Update() = default;
		bool operator==(const Update&) const;
		bool operator!=(const Update&) const;
		
		// Creates an Update from a DatabaseSyncReference object.
		static Update FromInitialData(const DatabaseSyncReference& Data);
		
		/**
		 * Converts to a DatabaseSyncReference
		 * object. It is an error to call this function unless *all* of the optional fields in this
		 * update are filled in.
		 */
		DatabaseSyncReference ToInitialData() const;
		
		/**
		 * Replaces fields in the given DatabaseSyncReference
		 * object with the corresponding fields in this update, where present.
		 */
		void ApplyTo(DatabaseSyncReference&) const;
		
		// Serialize this update object data into the C API component update argument
		void Serialize(Schema_ComponentUpdate* ComponentUpdate) const override;
		
		// Deserialize the C API component update argument into an instance of this class and return it
		static Update Deserialize(Schema_ComponentUpdate* ComponentUpdate);
		
		// Field Path = 1
		const SpatialGDK::TSchemaOption<FString>& GetPath() const;
		SpatialGDK::TSchemaOption<FString>& GetPath();
		DatabaseSyncReference::Update& SetPath(const FString&);
		
	private:
		SpatialGDK::TSchemaOption<FString> _Path;
	};

	using AddComponentOp = ::improbable::AddComponentOp<DatabaseSyncReference>;
	using RemoveComponentOp = ::improbable::RemoveComponentOp<DatabaseSyncReference>;
	using ComponentUpdateOp = ::improbable::ComponentUpdateOp<Update>;
	using AuthorityChangeOp = ::improbable::AuthorityChangeOp<DatabaseSyncReference>;
};

inline uint32 GetTypeHash(const DatabaseSyncReference& Value);

} // namespace database_sync
} // namespace improbable

