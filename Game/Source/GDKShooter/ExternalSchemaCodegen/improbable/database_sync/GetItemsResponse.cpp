// Generated by Unreal External Schema Codegen

#include "GetItemsResponse.h"
#include <set>
#include "../../MapEquals.h"

// Generated from C:\DEV\UnrealGDKExampleProject\Game\Plugins\UnrealGDK\SpatialGDK\Build\Scripts\dbsync\database_sync.schema(112,1)
namespace improbable {
namespace database_sync {

GetItemsResponse::GetItemsResponse(
	const TArray<::improbable::database_sync::DatabaseSyncItem>& Items)
: _Items{ Items } {}

GetItemsResponse::GetItemsResponse() {}

bool GetItemsResponse::operator==(const GetItemsResponse& Value) const
{
	return _Items == Value._Items;
}

bool GetItemsResponse::operator!=(const GetItemsResponse& Value) const
{
	return !operator== (Value);
}

const TArray<::improbable::database_sync::DatabaseSyncItem>& GetItemsResponse::GetItems() const
{
	return _Items;
}

TArray<::improbable::database_sync::DatabaseSyncItem>& GetItemsResponse::GetItems()
{
	return _Items; 
}

GetItemsResponse& GetItemsResponse::SetItems(const TArray<::improbable::database_sync::DatabaseSyncItem>& Value)
{
	_Items = Value;
	return *this;
}

void GetItemsResponse::Serialize(Schema_Object* SchemaObject) const
{
	// serializing field Items = 1
	for (const ::improbable::database_sync::DatabaseSyncItem& Element : _Items)
	{
		Element.Serialize(Schema_AddObject(SchemaObject, 1));
	}
}

GetItemsResponse GetItemsResponse::Deserialize(Schema_Object* SchemaObject)
{
	GetItemsResponse Data;
	
	// deserializing field Items = 1
	{
		auto ListLength = Schema_GetObjectCount(SchemaObject, 1);
		TArray<::improbable::database_sync::DatabaseSyncItem> ItemsList;
		ItemsList.SetNum(ListLength);
		for (uint32 i = 0; i < ListLength; ++i)
		{
			ItemsList[i] = ::improbable::database_sync::DatabaseSyncItem::Deserialize(Schema_IndexObject(SchemaObject, 1, i));
		}
		Data._Items = ItemsList;
	}
	
	return Data;
}

uint32 GetTypeHash(const improbable::database_sync::GetItemsResponse& Value)
{
	uint32 Result = 1327;
	for (const auto& item : Value.GetItems())
	{
		Result = (Result * 977) + improbable::database_sync::GetTypeHash(item);
	}
	return Result;
}

} // namespace database_sync
} // namespace improbable
