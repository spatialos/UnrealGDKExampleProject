// Generated by Unreal External Schema Codegen

#include "GetItemsRequest.h"
#include <set>
#include "../../MapEquals.h"

// Generated from C:\DEV\UnrealGDKExampleProject\Game\Plugins\UnrealGDK\SpatialGDK\Build\Scripts\dbsync\database_sync.schema(99,1)
namespace improbable {
namespace database_sync {

GetItemsRequest::GetItemsRequest(
	const FString& Path, 
	const ::improbable::database_sync::GetItemDepth& Depth, 
	const FString& WorkerId)
: _Path{ Path }
, _Depth{ Depth }
, _WorkerId{ WorkerId } {}

GetItemsRequest::GetItemsRequest() {}

bool GetItemsRequest::operator==(const GetItemsRequest& Value) const
{
	return _Path == Value._Path && 
	_Depth == Value._Depth && 
	_WorkerId == Value._WorkerId;
}

bool GetItemsRequest::operator!=(const GetItemsRequest& Value) const
{
	return !operator== (Value);
}

const FString& GetItemsRequest::GetPath() const
{
	return _Path;
}

FString& GetItemsRequest::GetPath()
{
	return _Path; 
}

GetItemsRequest& GetItemsRequest::SetPath(const FString& Value)
{
	_Path = Value;
	return *this;
}

const ::improbable::database_sync::GetItemDepth& GetItemsRequest::GetDepth() const
{
	return _Depth;
}

::improbable::database_sync::GetItemDepth& GetItemsRequest::GetDepth()
{
	return _Depth; 
}

GetItemsRequest& GetItemsRequest::SetDepth(const ::improbable::database_sync::GetItemDepth& Value)
{
	_Depth = Value;
	return *this;
}

const FString& GetItemsRequest::GetWorkerId() const
{
	return _WorkerId;
}

FString& GetItemsRequest::GetWorkerId()
{
	return _WorkerId; 
}

GetItemsRequest& GetItemsRequest::SetWorkerId(const FString& Value)
{
	_WorkerId = Value;
	return *this;
}

void GetItemsRequest::Serialize(Schema_Object* SchemaObject) const
{
	// serializing field Path = 1
	::improbable::utils::AddString(SchemaObject, 1, _Path);
	// serializing field Depth = 2
	Schema_AddEnum(SchemaObject, 2, static_cast<uint32>(_Depth));
	// serializing field WorkerId = 3
	::improbable::utils::AddString(SchemaObject, 3, _WorkerId);
}

GetItemsRequest GetItemsRequest::Deserialize(Schema_Object* SchemaObject)
{
	GetItemsRequest Data;
	
	// deserializing field Path = 1
	Data._Path = ::improbable::utils::GetString(SchemaObject, 1);
	
	// deserializing field Depth = 2
	Data._Depth = static_cast<::improbable::database_sync::GetItemDepth>(Schema_GetEnum(SchemaObject, 2));
	
	// deserializing field WorkerId = 3
	Data._WorkerId = ::improbable::utils::GetString(SchemaObject, 3);
	
	return Data;
}

uint32 GetTypeHash(const improbable::database_sync::GetItemsRequest& Value)
{
	uint32 Result = 1327;
	Result = (Result * 977) + ::GetTypeHash(Value.GetPath());
	Result = (Result * 977) + ::GetTypeHash(Value.GetDepth());
	Result = (Result * 977) + ::GetTypeHash(Value.GetWorkerId());
	return Result;
}

} // namespace database_sync
} // namespace improbable
