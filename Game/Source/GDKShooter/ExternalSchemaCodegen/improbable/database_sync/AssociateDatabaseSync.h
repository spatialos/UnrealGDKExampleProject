// Generated by Unreal External Schema Codegen

#pragma once

#include "CoreMinimal.h"
#include "Utils/SchemaOption.h"
#include <WorkerSDK/improbable/c_schema.h>
#include <WorkerSDK/improbable/c_worker.h>

#include "../../ExternalSchemaHelperFunctions.h"

namespace improbable {
namespace database_sync {

// Generated from C:\DEV\UnrealGDKExampleProject\Game\Plugins\UnrealGDK\SpatialGDK\Build\Scripts\dbsync\database_sync.schema(48,1)
class AssociateDatabaseSync : public improbable::SpatialComponent
{
public:
	static const Worker_ComponentId ComponentId = 1907;
	// Creates a new instance with specified arguments for each field.
	AssociateDatabaseSync(int64 Count);
	// Creates a new instance with default values for each field.
	AssociateDatabaseSync();
	// Creates a new instance with default values for each field. This is
	// equivalent to a default-constructed instance.
	static AssociateDatabaseSync Create() { return {}; }
	// Copyable and movable.
	AssociateDatabaseSync(AssociateDatabaseSync&&) = default;
	AssociateDatabaseSync(const AssociateDatabaseSync&) = default;
	AssociateDatabaseSync& operator=(AssociateDatabaseSync&&) = default;
	AssociateDatabaseSync& operator=(const AssociateDatabaseSync&) = default;
	~AssociateDatabaseSync() = default;
	
	bool operator==(const AssociateDatabaseSync&) const;
	bool operator!=(const AssociateDatabaseSync&) const;
	
	// Serialize this object data into the C API argument
	void Serialize(Schema_ComponentData* ComponentData) const override;
	
	// Deserialize the C API object argument into an instance of this class and return it
	static AssociateDatabaseSync Deserialize(Schema_ComponentData* ComponentData);
	
	// Field Count = 1
	int64 GetCount() const;
	int64& GetCount();
	AssociateDatabaseSync& SetCount(int64);
	
private:
	int64 _Count;

public:
	class Update : public improbable::SpatialComponentUpdate
	{
	public:
		// Creates a new instance with default values for each field.
		Update() = default;
		// Creates a new instance with default values for each field. This is
		// equivalent to a default-constructed instance.
		static Update Create() { return {}; }
		// Copyable and movable.
		Update(Update&&) = default;
		Update(const Update&) = default;
		Update& operator=(Update&&) = default;
		Update& operator=(const Update&) = default;
		~Update() = default;
		bool operator==(const Update&) const;
		bool operator!=(const Update&) const;
		
		// Creates an Update from a AssociateDatabaseSync object.
		static Update FromInitialData(const AssociateDatabaseSync& Data);
		
		/**
		 * Converts to a AssociateDatabaseSync
		 * object. It is an error to call this function unless *all* of the optional fields in this
		 * update are filled in.
		 */
		AssociateDatabaseSync ToInitialData() const;
		
		/**
		 * Replaces fields in the given AssociateDatabaseSync
		 * object with the corresponding fields in this update, where present.
		 */
		void ApplyTo(AssociateDatabaseSync&) const;
		
		// Serialize this update object data into the C API component update argument
		void Serialize(Schema_ComponentUpdate* ComponentUpdate) const override;
		
		// Deserialize the C API component update argument into an instance of this class and return it
		static Update Deserialize(Schema_ComponentUpdate* ComponentUpdate);
		
		// Field Count = 1
		const SpatialGDK::TSchemaOption<int64>& GetCount() const;
		SpatialGDK::TSchemaOption<int64>& GetCount();
		AssociateDatabaseSync::Update& SetCount(int64);
		
	private:
		SpatialGDK::TSchemaOption<int64> _Count;
	};

	using AddComponentOp = ::improbable::AddComponentOp<AssociateDatabaseSync>;
	using RemoveComponentOp = ::improbable::RemoveComponentOp<AssociateDatabaseSync>;
	using ComponentUpdateOp = ::improbable::ComponentUpdateOp<Update>;
	using AuthorityChangeOp = ::improbable::AuthorityChangeOp<AssociateDatabaseSync>;
};

inline uint32 GetTypeHash(const AssociateDatabaseSync& Value);

} // namespace database_sync
} // namespace improbable

