// Generated by Unreal External Schema Codegen

#include "GetItemRequest.h"
#include <set>
#include "../../MapEquals.h"

// Generated from C:\DEV\UnrealGDKExampleProject\Game\Plugins\UnrealGDK\SpatialGDK\Build\Scripts\dbsync\database_sync.schema(77,1)
namespace improbable {
namespace database_sync {

GetItemRequest::GetItemRequest(
	const FString& Path, 
	const FString& WorkerId)
: _Path{ Path }
, _WorkerId{ WorkerId } {}

GetItemRequest::GetItemRequest() {}

bool GetItemRequest::operator==(const GetItemRequest& Value) const
{
	return _Path == Value._Path && 
	_WorkerId == Value._WorkerId;
}

bool GetItemRequest::operator!=(const GetItemRequest& Value) const
{
	return !operator== (Value);
}

const FString& GetItemRequest::GetPath() const
{
	return _Path;
}

FString& GetItemRequest::GetPath()
{
	return _Path; 
}

GetItemRequest& GetItemRequest::SetPath(const FString& Value)
{
	_Path = Value;
	return *this;
}

const FString& GetItemRequest::GetWorkerId() const
{
	return _WorkerId;
}

FString& GetItemRequest::GetWorkerId()
{
	return _WorkerId; 
}

GetItemRequest& GetItemRequest::SetWorkerId(const FString& Value)
{
	_WorkerId = Value;
	return *this;
}

void GetItemRequest::Serialize(Schema_Object* SchemaObject) const
{
	// serializing field Path = 1
	::improbable::utils::AddString(SchemaObject, 1, _Path);
	// serializing field WorkerId = 2
	::improbable::utils::AddString(SchemaObject, 2, _WorkerId);
}

GetItemRequest GetItemRequest::Deserialize(Schema_Object* SchemaObject)
{
	GetItemRequest Data;
	
	// deserializing field Path = 1
	Data._Path = ::improbable::utils::GetString(SchemaObject, 1);
	
	// deserializing field WorkerId = 2
	Data._WorkerId = ::improbable::utils::GetString(SchemaObject, 2);
	
	return Data;
}

uint32 GetTypeHash(const improbable::database_sync::GetItemRequest& Value)
{
	uint32 Result = 1327;
	Result = (Result * 977) + ::GetTypeHash(Value.GetPath());
	Result = (Result * 977) + ::GetTypeHash(Value.GetWorkerId());
	return Result;
}

} // namespace database_sync
} // namespace improbable
