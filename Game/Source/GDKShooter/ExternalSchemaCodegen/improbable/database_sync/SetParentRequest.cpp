// Generated by Unreal External Schema Codegen

#include "SetParentRequest.h"
#include <set>
#include "../../MapEquals.h"

// Generated from C:\DEV\UnrealGDKExampleProject\Game\Plugins\UnrealGDK\SpatialGDK\Build\Scripts\dbsync\database_sync.schema(156,1)
namespace improbable {
namespace database_sync {

SetParentRequest::SetParentRequest(
	const FString& Path, 
	const FString& NewParent, 
	const FString& WorkerId)
: _Path{ Path }
, _NewParent{ NewParent }
, _WorkerId{ WorkerId } {}

SetParentRequest::SetParentRequest() {}

bool SetParentRequest::operator==(const SetParentRequest& Value) const
{
	return _Path == Value._Path && 
	_NewParent == Value._NewParent && 
	_WorkerId == Value._WorkerId;
}

bool SetParentRequest::operator!=(const SetParentRequest& Value) const
{
	return !operator== (Value);
}

const FString& SetParentRequest::GetPath() const
{
	return _Path;
}

FString& SetParentRequest::GetPath()
{
	return _Path; 
}

SetParentRequest& SetParentRequest::SetPath(const FString& Value)
{
	_Path = Value;
	return *this;
}

const FString& SetParentRequest::GetNewParent() const
{
	return _NewParent;
}

FString& SetParentRequest::GetNewParent()
{
	return _NewParent; 
}

SetParentRequest& SetParentRequest::SetNewParent(const FString& Value)
{
	_NewParent = Value;
	return *this;
}

const FString& SetParentRequest::GetWorkerId() const
{
	return _WorkerId;
}

FString& SetParentRequest::GetWorkerId()
{
	return _WorkerId; 
}

SetParentRequest& SetParentRequest::SetWorkerId(const FString& Value)
{
	_WorkerId = Value;
	return *this;
}

void SetParentRequest::Serialize(Schema_Object* SchemaObject) const
{
	// serializing field Path = 1
	::improbable::utils::AddString(SchemaObject, 1, _Path);
	// serializing field NewParent = 2
	::improbable::utils::AddString(SchemaObject, 2, _NewParent);
	// serializing field WorkerId = 3
	::improbable::utils::AddString(SchemaObject, 3, _WorkerId);
}

SetParentRequest SetParentRequest::Deserialize(Schema_Object* SchemaObject)
{
	SetParentRequest Data;
	
	// deserializing field Path = 1
	Data._Path = ::improbable::utils::GetString(SchemaObject, 1);
	
	// deserializing field NewParent = 2
	Data._NewParent = ::improbable::utils::GetString(SchemaObject, 2);
	
	// deserializing field WorkerId = 3
	Data._WorkerId = ::improbable::utils::GetString(SchemaObject, 3);
	
	return Data;
}

uint32 GetTypeHash(const improbable::database_sync::SetParentRequest& Value)
{
	uint32 Result = 1327;
	Result = (Result * 977) + ::GetTypeHash(Value.GetPath());
	Result = (Result * 977) + ::GetTypeHash(Value.GetNewParent());
	Result = (Result * 977) + ::GetTypeHash(Value.GetWorkerId());
	return Result;
}

} // namespace database_sync
} // namespace improbable
