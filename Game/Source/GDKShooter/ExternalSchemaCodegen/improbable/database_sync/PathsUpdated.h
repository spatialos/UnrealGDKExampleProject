// Generated by Unreal External Schema Codegen

#pragma once

#include "CoreMinimal.h"
#include "Utils/SchemaOption.h"
#include <WorkerSDK/improbable/c_schema.h>
#include <WorkerSDK/improbable/c_worker.h>

#include "../../ExternalSchemaHelperFunctions.h"

namespace improbable {
namespace database_sync {

// Generated from C:\DEV\UnrealGDKExampleProject\Game\Plugins\UnrealGDK\SpatialGDK\Build\Scripts\dbsync\database_sync.schema(258,1)
class PathsUpdated : public improbable::SpatialType
{
public:
	// Creates a new instance with specified arguments for each field.
	PathsUpdated(const TArray<FString>& Paths);
	// Creates a new instance with default values for each field.
	PathsUpdated();
	// Creates a new instance with default values for each field. This is
	// equivalent to a default-constructed instance.
	static PathsUpdated Create() { return {}; }
	// Copyable and movable.
	PathsUpdated(PathsUpdated&&) = default;
	PathsUpdated(const PathsUpdated&) = default;
	PathsUpdated& operator=(PathsUpdated&&) = default;
	PathsUpdated& operator=(const PathsUpdated&) = default;
	~PathsUpdated() = default;
	
	bool operator==(const PathsUpdated&) const;
	bool operator!=(const PathsUpdated&) const;
	
	// Serialize this object data into the C API argument
	void Serialize(Schema_Object* SchemaObject) const override;
	
	// Deserialize the C API object argument into an instance of this class and return it
	static PathsUpdated Deserialize(Schema_Object* SchemaObject);
	
	// Field Paths = 1
	const TArray<FString>& GetPaths() const;
	TArray<FString>& GetPaths();
	PathsUpdated& SetPaths(const TArray<FString>&);
	
private:
	TArray<FString> _Paths;
};

inline uint32 GetTypeHash(const PathsUpdated& Value);

} // namespace database_sync
} // namespace improbable

